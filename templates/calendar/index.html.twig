{% extends 'base.html.twig' %}

{% block title %}Calendar index{% endblock %}

{% block body %}
    {# {{dump(data)}} #}
{# <div id='calendar'></div> #}
    <h1>Calendar index</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th>Start</th>
                <th>End</th>
                <th>Description</th>
                <th>AllDay</th>
                <th>BackgroundColor</th>
                <th>BorderColor</th>
                <th>TextColor</th>
                <th>show</th>
                <th>edit</th>
            </tr>
        </thead>
        <tbody>
        {% for calendar in calendars %}
            <tr>
                <td>{{ calendar.id }}</td>
                <td>{{ calendar.title }}</td>
                <td>{{ calendar.start ? calendar.start|date('Y-m-d H:i:s') : '' }}</td>
                <td>{{ calendar.end ? calendar.end|date('Y-m-d H:i:s') : '' }}</td>
                <td>{{ calendar.description }}</td>
                <td>{{ calendar.allDay ? 'Yes' : 'No' }}</td>
                <td>{{ calendar.backgroundColor }}</td>
                <td>{{ calendar.borderColor }}</td>
                <td>{{ calendar.textColor }}</td>
                <td><a href="{{ path('app_calendar_show', {'id': calendar.id}) }}"><i class="fa-solid fa-eye"></i>show</a></td>
                <td><a href="{{ path('app_calendar_edit', {'id': calendar.id}) }}"><i class="fa-solid fa-pen-to-square"></i>edit</a></td>
            </tr>
        {% else %}
            <tr>
                <td colspan="10">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <button class="btn btn-lg btn-primary" type="submit"><a href="{{ path('app_calendar_new') }}">Crée un nouvelle évenement</a></button>
    
    {# <div id='calendarSession'></div> #}
        {% block javascripts %}
            <script>
                // on ajoute un evenement d'écoute sur le document charger sur cet page avec une fonction
                document.addEventListener('DOMContentLoaded', function() {
                    // on selectionne l'élément qui a pour ID 'calendar'
                    let calendarEl = document.getElementById('calendar');
                    // calendar = nouveau calendrier et calandarEl seras composer de :
                    let calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'timeGridWeek',    // ou possible de mettre 'listWeek' ou 'dayGridMonth'
                        locale: 'fr',   // pour avoir le texte en français
                        timeZone: 'Europe/Paris', // time zone de l'europe
                        headerToolbar:  {       // modifier la disposition de la toullbar et ajouter des éléments
                            start: 'prev,next today', // preve nexte au début 
                            center: 'title',        //title au milieu
                            end: 'dayGridMonth, timeGridWeek'  // a la fin on a choix afficher le mois ou la semaine
                        },
                        events: {{ data | raw }},
                        editable:true,  // on permet l'edition 
                        eventResizableFromStart : true,  // on permet d'étirer l'évenement vers le haut pour ajouter du temps 
                    
                    });
                    calendar.on('eventChange' , (e) => { // permet de changer l'évenement de date de le déplacer dans le calendrier
                        let url = `/api/${e.event.id}/edit` ;
                        let donnees = {
                            "title": e.event.title,
                            "description": e.event.extendedProps.description,  // extended car pas prévue donc mis sous se non par fullcalendar on doit l'utilise pour récuperer l'info
                            "start": e.event.start, 
                            "end": e.event.end,
                            "backgroundColor": e.event.backgroundColor,
                            "textColor": e.event.textColor,
                            "borderColor": e.event.borderColor,
                            "allDay": e.event.allDay,
                        }
                        let xhr = new XMLHttpRequest;
                        xhr.open("PUT" ,url);
                        xhr.send(JSON.stringify(donnees));

                        // il faut encore traiter les données
                    })

                    calendar.render();
                });
            </script>
            <script>
                // on ajoute un evenement d'écoute sur le document charger sur cet page avec une fonction
                document.addEventListener('DOMContentLoaded', function() {
                    // on selectionne l'élément qui a pour ID 'calendar'
                    let calendarEl = document.getElementById('calendarSession');
                    // calendar = nouveau calendrier et calandarEl seras composer de :
                    let calendar = new FullCalendar.Calendar(calendarEl, {
                        initialView: 'timeGridWeek',    // ou possible de mettre 'listWeek' ou 'dayGridMonth'
                        locale: 'fr',   // pour avoir le texte en français
                        timeZone: 'Europe/Paris', // time zone de l'europe
                        headerToolbar:  {       // modifier la disposition de la toullbar et ajouter des éléments
                            start: 'prev,next today', // preve nexte au début 
                            center: 'title',        //title au milieu
                            end: 'dayGridMonth, timeGridWeek'  // a la fin on a choix afficher le mois ou la semaine
                        },
                        events: {{ dataOfSession | raw }},
                        editable:true,  // on permet l'edition 
                        eventResizableFromStart : true,  // on permet d'étirer l'évenement vers le haut pour ajouter du temps 
                    
                    });
                    calendar.on('eventChange' , (e) => { // permet de changer l'évenement de date de le déplacer dans le calendrier
                        let url = `/api/${e.event.id}/edit` ;
                        let donnees = {
                            "title": e.event.title,
                            "nbPlace": e.event.nbPlace,  // extended car pas prévue donc mis sous se non par fullcalendar on doit l'utilise pour récuperer l'info
                            "dateStart": e.event.DateStart, 
                            "dateEnd": e.event.dateEnd,
                           
                        }
                        let xhr = new XMLHttpRequest;
                        xhr.open("PUT" ,url);
                        xhr.send(JSON.stringify(donnees));

                        // il faut encore traiter les données
                    })

                    calendar.render();
                });
            </script>
        {% endblock %}
{% endblock %}
